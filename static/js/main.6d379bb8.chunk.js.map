{"version":3,"sources":["components/shopping.jsx","components/shoppings.jsx","app.jsx","reportWebVitals.js","index.js"],"names":["Shopping","state","count","handleIncrement","e","setState","handleDecrement","this","props","shoppingData","name","className","onClick","Component","Shoppings","shoppings","map","item","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OA4CeA,E,4MAxCbC,MAAQ,CACNC,MAAO,G,EAGTC,gBAAkB,SAACC,GACjB,EAAKC,SAAS,CAAEH,MAAO,EAAKD,MAAMC,MAAQ,K,EAG5CI,gBAAkB,SAACF,GACb,EAAKH,MAAMC,MAAQ,GACrB,EAAKG,SAAS,CAAEH,MAAO,EAAKD,MAAMC,MAAQ,K,4CAG9C,WAAS,MAEiBK,KAAKC,MAAMC,aAA3BC,EAFD,EAECA,KAAMR,EAFP,EAEOA,MACd,OACE,qBAAIS,UAAU,WAAd,UACE,sBAAMA,UAAU,gBAAhB,SAAiCD,IACjC,sBAAMC,UAAU,iBAAhB,SAAkCT,IAClC,wBACES,UAAU,oCACVC,QAASL,KAAKJ,gBAFhB,SAIE,mBAAGQ,UAAU,yBAEf,wBACEA,UAAU,oCACVC,QAASL,KAAKD,gBAFhB,SAIE,mBAAGK,UAAU,0BAEf,wBAAQA,UAAU,kCAAlB,SACE,mBAAGA,UAAU,0B,GAlCAE,aCmBRC,E,4MAlBbb,MAAQ,CACNc,UAAW,CACT,CAAEL,KAAM,QAASR,MAAO,GACxB,CAAEQ,KAAM,SAAUR,MAAO,GACzB,CAAEQ,KAAM,OAAQR,MAAO,K,4CAG3B,WACE,OACE,6BACGK,KAAKN,MAAMc,UAAUC,KAAI,SAACC,GAAD,OACxB,cAAC,EAAD,CAAUR,aAAcQ,a,GAZVJ,aCcTK,MAbf,WACE,OACE,mCACE,0BAASP,UAAU,OAAnB,UACE,wBAAQA,UAAU,WAClB,oBAAIA,UAAU,QAAd,SACE,cAAC,EAAD,YCEKQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6d379bb8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { BsFillPlusCircleFill } from \"react-icons/io\";\r\n\r\nclass Shopping extends Component {\r\n  state = {\r\n    count: 0,\r\n  };\r\n\r\n  handleIncrement = (e) => {\r\n    this.setState({ count: this.state.count + 1 });\r\n  };\r\n\r\n  handleDecrement = (e) => {\r\n    if (this.state.count > 0) {\r\n      this.setState({ count: this.state.count - 1 });\r\n    }\r\n  };\r\n  render() {\r\n    //const shoppingName =\r\n    const { name, count } = this.props.shoppingData;\r\n    return (\r\n      <li className=\"shopping\">\r\n        <span className=\"shopping-name\">{name}</span>\r\n        <span className=\"shopping-count\">{count}</span>\r\n        <button\r\n          className=\"shopping-button shopping-increase\"\r\n          onClick={this.handleIncrement}\r\n        >\r\n          <i className=\"fas fa-plus-square\"></i>\r\n        </button>\r\n        <button\r\n          className=\"shopping-button shopping-decrease\"\r\n          onClick={this.handleDecrement}\r\n        >\r\n          <i className=\"fas fa-minus-square\"></i>\r\n        </button>\r\n        <button className=\"shopping-button shopping-delete\">\r\n          <i className=\"fas fa-trash\"></i>\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Shopping;\r\n","import React, { Component } from \"react\";\r\nimport Shopping from \"./shopping\";\r\n\r\nclass Shoppings extends Component {\r\n  state = {\r\n    shoppings: [\r\n      { name: \"Apple\", count: 0 },\r\n      { name: \"Banana\", count: 0 },\r\n      { name: \"Kiwi\", count: 0 },\r\n    ],\r\n  };\r\n  render() {\r\n    return (\r\n      <ul>\r\n        {this.state.shoppings.map((item) => (\r\n          <Shopping shoppingData={item} />\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Shoppings;\r\n","import React from \"react\";\nimport \"./app.css\";\nimport Shoppings from \"./components/shoppings\";\n\nfunction App() {\n  return (\n    <>\n      <section className=\"list\">\n        <header className=\"header\" />\n        <ul className=\"items\">\n          <Shoppings />\n        </ul>\n      </section>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"@fortawesome/fontawesome-free/js/all.js\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}