{"version":3,"sources":["components/shopping.jsx","components/shoppingAddForm.jsx","components/shoppings.jsx","components/navbar.jsx","app.jsx","reportWebVitals.js","index.js"],"names":["Shopping","this","props","shoppingData","name","count","className","onClick","onIncrement","onDecrement","onDelete","Component","ShoppingAddForm","formRef","React","createRef","inputRef","onSubmit","event","preventDefault","current","value","onAdd","reset","ref","type","placeholder","Shoppings","item","map","id","onReset","onRefresh","Navbar","itemCount","totalCount","App","state","shoppings","handleIncrement","tmpArr","idx","indexOf","setState","handleDecrement","handleDelete","filter","handleAdd","Date","now","handleReset","handleRefresh","length","reduce","a","b","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.528e59b3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { BsFillPlusCircleFill } from \"react-icons/io\";\r\n\r\nclass Shopping extends Component {\r\n  render() {\r\n    //    console.log(this.props.shoppingData);\r\n    const { name, count } = this.props.shoppingData;\r\n\r\n    return (\r\n      <li className=\"shopping\">\r\n        <span className=\"shopping-name\">{name}</span>\r\n        <span className=\"shopping-count\">{count}</span>\r\n        <button\r\n          className=\"shopping-button shopping-increase\"\r\n          onClick={() => {\r\n            this.props.onIncrement(this.props.shoppingData);\r\n          }}\r\n        >\r\n          <i className=\"fas fa-plus-square\"></i>\r\n        </button>\r\n        <button\r\n          className=\"shopping-button shopping-decrease\"\r\n          onClick={() => {\r\n            this.props.onDecrement(this.props.shoppingData);\r\n          }}\r\n        >\r\n          <i className=\"fas fa-minus-square\"></i>\r\n        </button>\r\n        <button\r\n          className=\"shopping-button shopping-delete\"\r\n          onClick={() => {\r\n            this.props.onDelete(this.props.shoppingData);\r\n          }}\r\n        >\r\n          <i className=\"fas fa-trash\"></i>\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Shopping;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ShoppingAddForm extends Component {\r\n  formRef = React.createRef();\r\n  inputRef = React.createRef();\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    const name = this.inputRef.current.value;\r\n    name && this.props.onAdd(name);\r\n    this.formRef.current.reset();\r\n  };\r\n  render() {\r\n    return (\r\n      <form ref={this.formRef} className=\"add-form\" onSubmit={this.onSubmit}>\r\n        <input\r\n          ref={this.inputRef}\r\n          type=\"text\"\r\n          className=\"add-input\"\r\n          placeholder=\"Add Shopping Item\"\r\n        />\r\n        <button className=\"add-button\">Add</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShoppingAddForm;\r\n","import React, { Component } from \"react\";\r\nimport Shopping from \"./shopping\";\r\nimport ShoppingAddForm from \"./shoppingAddForm\";\r\n\r\nclass Shoppings extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <ul>\r\n          {this.props.item.map((item) => (\r\n            <Shopping\r\n              key={item.id}\r\n              shoppingData={item}\r\n              onIncrement={this.props.onIncrement}\r\n              onDecrement={this.props.onDecrement}\r\n              onDelete={this.props.onDelete}\r\n            />\r\n          ))}\r\n        </ul>\r\n        <div className=\"resetBtns\">\r\n          <button\r\n            className=\"shoppings-reset count\"\r\n            onClick={this.props.onReset}\r\n          >\r\n            Reset Count\r\n          </button>\r\n          <button\r\n            className=\"shoppings-reset all\"\r\n            onClick={this.props.onRefresh}\r\n          >\r\n            Refresh\r\n          </button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Shoppings;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <nav>\r\n        <header className=\"header\">\r\n          <i className=\"fas fa-shopping-cart\"></i>\r\n          Shopping List\r\n        </header>\r\n        <div className=\"navCount\">\r\n          종류 수:<span className=\"navbarCount\">{this.props.itemCount}</span> 총\r\n          개수:\r\n          <span className=\"navbarCount\">{this.props.totalCount}</span>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\nimport Shoppings from \"./components/shoppings\";\nimport \"./app.css\";\nimport Navbar from \"./components/navbar\";\nimport ShoppingAddForm from \"./components/shoppingAddForm\";\n\nclass App extends Component {\n  state = {\n    shoppings: [\n      { id: 1, name: \"Apple\", count: 3 },\n      { id: 2, name: \"Banana\", count: 5 },\n      { id: 3, name: \"Kiwi\", count: 10 },\n    ],\n  };\n  handleIncrement = (shoppingData) => {\n    const tmpArr = [...this.state.shoppings];\n    const idx = tmpArr.indexOf(shoppingData);\n    tmpArr[idx].count += 1;\n    this.setState({ shoppings: tmpArr });\n  };\n\n  handleDecrement = (shoppingData) => {\n    const tmpArr = [...this.state.shoppings];\n    const idx = tmpArr.indexOf(shoppingData);\n    const count = tmpArr[idx].count - 1;\n    tmpArr[idx].count = count < 0 ? 0 : count;\n    this.setState({ shoppings: tmpArr });\n  };\n\n  handleDelete = (shoppingData) => {\n    const tmpArr = this.state.shoppings.filter(\n      (item) => item.id !== shoppingData.id\n    );\n    this.setState({ shoppings: tmpArr });\n  };\n\n  handleAdd = (name) => {\n    const tmpArr = [\n      ...this.state.shoppings,\n      { id: Date.now(), name, count: 1 },\n    ];\n    this.setState({ shoppings: tmpArr });\n  };\n\n  handleReset = () => {\n    const tmpArr = this.state.shoppings.map((item) => {\n      item.count = 0;\n      return item;\n    });\n    this.setState({ shoppings: tmpArr });\n  };\n  handleRefresh = () => {\n    const tmpArr = [];\n    this.setState({ shoppings: tmpArr });\n  };\n  // handleCount = () => {\n  //   const totalCount = this.state.shoppings.reduce((a, b) => a + b.count, 0);\n  //   return totalCount;\n  // };\n  render() {\n    return (\n      <>\n        <section className=\"list\">\n          <Navbar\n            itemCount={\n              this.state.shoppings.filter((item) => item.count > 0).length\n            }\n            totalCount={this.state.shoppings.reduce((a, b) => a + b.count, 0)}\n          />\n          <ul className=\"items\">\n            <Shoppings\n              item={this.state.shoppings}\n              onIncrement={this.handleIncrement}\n              onDecrement={this.handleDecrement}\n              onDelete={this.handleDelete}\n              onReset={this.handleReset}\n              onRefresh={this.handleRefresh}\n            />\n          </ul>\n          <ShoppingAddForm onAdd={this.handleAdd} />\n        </section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"@fortawesome/fontawesome-free/js/all.js\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}